"use strict";(self.webpackChunkacdl_helper=self.webpackChunkacdl_helper||[]).push([[595],{595:(e,t,n)=>{function r(e){return function(t){const{selector:n=null,event_name:r="cmp:click",delay:c=0}=t;!function(t,n,o){document.querySelector("body").addEventListener("click",(function(n){const o=n.target.matches(t)?n.target:n.target.closest(t);o&&function(t,n){if(!n.href)return;0!==c&&t.preventDefault();const o=function(e){const t=e=>{try{return JSON.parse(e)}catch(e){return}};return e?.dataset?.cmpDataLayer?t(e.dataset.cmpDataLayer):void 0}(n);o?(e.acdl.push({event:r,eventInfo:{path:`component.${Object.keys(o)[0]}`}}),null!==c&&setTimeout((function(){window.location=n.href}),c)):window.location=n.href}(n,o)}),!0)}(n),e.logger.success(`Register event "${r}" with delay ${c}`)}}n.r(t),n.d(t,{default:()=>a});const c=Object.freeze({has_typed_properties:function(e){return function(t){const n=Object.keys(e).reduce(((n,r)=>{return function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}(t,r)?(c=e[r],a=t[r],{string:o,number:i}[c](a)||n.push({error:`Expect type <${e[r]}> in property ${r}`}),n):(n.push({error:`Expect property "${r}"`}),n);var c,a}),[]);return!(n.length>0)||n}},all_good:function(e){return!!Array.isArray(e)&&e.reduce(((e,t)=>!0===t&&e),!0)}});function o(e){return"string"==typeof e}function i(e){return Number.isFinite(e)}function a(){return{meta:Object.freeze({name:"clickables",dependencies:[],events:[],config:{register:[{selector:"[data-cmp-clickable-link]",event_name:"cmp:link_click",delay:200},{selector:"[data-cmp-clickable-cta]",event_name:"cmp:cta_click",delay:200}]}}),impl:t=>({init:e(t)})};function e(e){const t=e.config.register.map(c.has_typed_properties({selector:"string",event_name:"string",delay:"number"}));if(!c.all_good(t))return e.logger.error('Invalid configuration of config "clickables',t),function(){};const n=r(e);return function(){e.config.register.forEach(n),e.logger.success("Clickable elements initialized")}}}}}]);