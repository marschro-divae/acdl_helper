"use strict";(self.webpackChunkacdl_helper=self.webpackChunkacdl_helper||[]).push([[464],{464:(e,n,o)=>{o.r(n),o.d(n,{default:()=>a});const t=Object.freeze({update_object:function(e,n){const o={};return e.reduce((function(e,o,t,a){return t===a.length-1?e[o]=n:e[o]={}}),o),o}});function a(){return{meta:Object.freeze({name:"usercentrics",dependencies:["consent_status","launch:loaded"],events:["consent_status"],config:{protocol:{"Adobe Analytics":"ANALYTICS","Adobe Target":"TARGET"},push_after:""}}),impl:t=>({init:e(t),handle_event:n(t),provider:o(t)})};function e(e){return function(){const n=e=>{window.UC_UI.updateLanguage(document.documentElement.lang),window.removeEventListener("UC_UI_INITIALIZED",n)};window.UC_UI&&window.UC_UI.isInitialized()?window.UC_UI.updateLanguage(document.documentElement.lang):window.addEventListener("UC_UI_INITIALIZED",n),window.adobe?.optIn?window.adobe.optIn.on("complete",(n=>{e.logger.success("Consent updated: ",{consent:n}),e.acdl.push({event:`${e.event_prefix}:consent_applied`}),e.acdl.push(t.update_object(["user","consent","adobe"],n)),e.config.push_after&&e.acdl.push({event:e.config.push_after})})):e.logger.error("Adobe OptIn Framwork not available - Please install via ECID Launch Extension")}}function n(e){return function(n){if(e?.config?.protocol||e.logger.warning("No custom protocol configured - using fallback protocol!"),!window.adobe?.optIn)return void e.logger.error("Cannot handle event - adobe optIn framework is missing!");const o=e.config.protocol;Object.keys(n).reduce(((e,t)=>Object.prototype.hasOwnProperty.call(o,t)?n[t]?(window.adobe.optIn.approve(window.adobe.OptInCategories[o[t]],!0),!0):(window.adobe.optIn.deny(window.adobe.OptInCategories[o[t]],!0),e):e),!1)?window.adobe.optIn.approve(window.adobe.OptInCategories.ECID,!0):window.adobe.optIn.deny(window.adobe.OptInCategories.ECID,!0),window.adobe.optIn.complete()}}function o(e){return Object.freeze({get_active_language:()=>window.UC_UI.getActiveLanguage(),get_base_info:()=>window.UC_UI.getServicesBaseInfo(),async get_full_info(){try{return await window.UC_UI.getServicesFullInfo()}catch(n){e.logger.error("Get full info from usercentrics failed:",n)}}})}}}}]);